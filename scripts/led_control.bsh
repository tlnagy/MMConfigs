/*  Control LEDs via serial commands
 * 
 *  Tamas Nagy, 2019
 * 
 */

import java.awt.Dimension;
import mmcorej.CharVector;
import mmcorej.DeviceType;
import javax.swing.JLabel;
import org.micromanager.internal.utils.MMDialog;
import net.miginfocom.swing.MigLayout;

double current_led_voltage = 0.0;

/*
 *  Deliver voltage for a given amount of time (in milliseconds) via
 *  the given port and DAC number.
 *  
 *  Example:
 *  
 *  	led_control("COM3", "DAC1", 0.5, 2000)
 *  
 *  will turn on DAC1 on COM3 for 2 seconds with 50% power
 */
led_control(String port, String dac, double voltage, int time) {
	long start = System.currentTimeMillis();
	prev_voltage = global.current_led_voltage; // get current voltage so we can restore it later
	led_control(port, dac, voltage);
	long timediff = time - (System.currentTimeMillis() - start);
	Thread.sleep(timediff);
	led_control(port, dac, prev_voltage); // restore
}

led_control(String port, String dac, double voltage) {
	CharVector message = new CharVector();

	global.current_led_voltage = voltage;

	command = dac+", "+(int)(voltage*65535)+"\r\n";
	// convert string to char vector
	for (char ch: command.toCharArray()){ message.add(ch); }
	
	mmc.writeToSerialPort(port, message);
}

led_control_async(String port, String dac, double voltage, int time) {
	long start_time = System.currentTimeMillis();
	prev_voltage = global.current_led_voltage;
	led_control(port, dac, voltage);
	
	runnable = new Runnable() {
		public void run() {
			while (true) {
				long timeleft = super.time - (System.currentTimeMillis() - super.start_time);
				if (timeleft < 0) {
					led_control(super.port, super.dac, super.prev_voltage); // restore voltage
					break;
				}
			}
		}
	};
	subThread = new Thread(runnable);
	subThread.start();
}

try{
	// connect to COM3 port if it's not already loaded
	loaded = false;
	ports = mmc.getLoadedDevicesOfType(DeviceType.SerialDevice);
	for(int i = 0; i < ports.size(); i++) {
		if(ports.get(i).equals("COM3")){
			loaded = true;
			break;
		}
	}
	if(!loaded){
		print("Initializing LEDs");
		mmc.loadDevice("COM3", "SerialManager", "COM3");
		mmc.initializeDevice("COM3");
	}
	mmc.setSerialProperties("COM3", "250", "57600", "0", "Off", "None", "1");
} catch (Exception e) {
	dlg = new MMDialog(mm.getFrame(), false);
	dlg.setTitle("Error");
	dlg.setLayout(new MigLayout("flowx"));
	dlg.setLocation(100,100);
	label = new JLabel("<html>"+e.getMessage()+"</html>");
	dlg.add(label, "span 4, align center, wrap");
	dlg.setMinimumSize(new Dimension(300, 120));
	dlg.setVisible(true);
}

